import numpy as np
# list_1 = np.arange(1, 10, 1)
# list_2 = np.sin(list_1)
# print(list_2)

matrix_1 = np.array([[[2, 4, 5],
                      [3, 3, 90],
                      [3, 4, 5]]])
# print(matrix_1)  # 养成一种习惯，几维数组最外层就要用几个方括号括起来
a = np.array([[[8, 5],
               [5, 2],
               [29, 56]]])
# print(np.dot(matrix_1, a))
a.shape = 1, 2, 3
print(a)
print(np.inner(matrix_1, a))  # 要求其中的一维数组必须有相同个数的元素
# 第一个矩阵中的第一个一维数组与第二个矩阵的第一个一维数组相乘，得到第一个元素
# 再乘第二个矩阵的第二个一维数组，得到第二个元素。
# 由此得到 结果矩阵 中的 第一行
# 以此类推

e = np.outer(a, matrix_1)
print("---"*5, "\n", e)
# 将会把第一矩阵中的第一个一维数组中第一个数拿出来，乘以后一个矩阵的每一个元素（相当于扩大每个数）
# 就相当于用第一个矩阵中的每个元素对第二个矩阵进行扩大，并同时形成一个新的 结果矩阵
# 结果矩阵的个数由第一个矩阵中元素的个数决定
