# 两个数据观测值的余弦相似度是一个介于-1和1之间的数字。
# 它专门测量两个数据观测值之间的特征值的比例相似度（即特征列之间的比率）。
# 接近1的余弦相似度值表示观测值之间的相似度更高，而接近-1的值表示较大的差异。
# 值为0表示两个数据观测值不相关（相似或不相似）。

"""计算公式，其实是两向量的cos夹角，也就是上边点乘下边模乘，只不过是扩展到高纬了"""
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

data = np.array([[1.1,  0.3],
                 [2.1,  0.6],
                 [-1.1, -0.4],
                 [0., -3.2]])
cos_sim_ = cosine_similarity(data)
print(cos_sim_)
"""
[[ 1.          0.99992743 -0.99659724 -0.26311741]
 [ 0.99992743  1.         -0.99751792 -0.27472113]
 [-0.99659724 -0.99751792  1.          0.34174306]
 [-0.26311741 -0.27472113  0.34174306  1.        ]]
"""
# 上面输入的4个数据，每个数据会分别与四个数据进行计算，4x4=16个
# 对角线上是与自身的，没有意义，我们用下函数替换

np.fill_diagonal(cos_sim_, 0)
# 第二个参数是要填充的值，都是位置参数

data2 = np.array([[1.7,  0.4],
                  [4.2, 1.25],
                  [-8.1,  1.2]])

cos_sim_1 = cosine_similarity(data, data2)
print(cos_sim_1)
# 这将会输出4x3的矩阵，一个中的每个数据分别与另一个中的每个数据相计算
"""[[ 0.9993819   0.99973508 -0.91578821]
 [ 0.99888586  0.99993982 -0.9108828 ]
 [-0.99308366 -0.9982304   0.87956492]
 [-0.22903933 -0.28525359 -0.14654866]]"""














